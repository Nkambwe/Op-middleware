// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Operators.Moddleware.Data;

#nullable disable

namespace Operators.Moddleware.Migrations
{
    [DbContext(typeof(OpsDbContext))]
    [Migration("20250318223454_object_tables")]
    partial class object_tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Access.Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnOrder(53)
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(52);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(51);

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnOrder(55)
                        .IsFixedLength();

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(54);

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Access.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(53)
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(52);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(51);

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(55)
                        .IsFixedLength();

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(54);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Access.RolePermission", b =>
                {
                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("PermissionId")
                        .HasColumnType("bigint");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolesPermissions", (string)null);
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Access.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(53)
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(52);

                    b.Property<long>("CurrentPassword")
                        .HasColumnType("bigint")
                        .HasColumnName("pwd")
                        .HasColumnOrder(7);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(6);

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(5);

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nchar(200)")
                        .HasColumnOrder(3)
                        .IsFixedLength();

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(51);

                    b.Property<bool>("IsLoggedin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(9);

                    b.Property<bool>("IsVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(8);

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(55)
                        .IsFixedLength();

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(54);

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<long>("ThemeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("RoleId");

                    b.HasIndex("ThemeId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Access.UserPassword", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(53)
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(52);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(51);

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(55)
                        .IsFixedLength();

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(54);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("User_pwd")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("SetOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Passwords");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Access.UserPermission", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("PermissionId")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("UserPermissions", (string)null);
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Branch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnOrder(1)
                        .IsFixedLength();

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(2);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(53)
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(52);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(51);

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(55)
                        .IsFixedLength();

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(54);

                    b.HasKey("Id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.Attachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AttachmentTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("Type")
                        .HasColumnOrder(9);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(53)
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(52);

                    b.Property<string>("DocumentExtension")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Extension")
                        .HasColumnOrder(10);

                    b.Property<string>("DocumentNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .HasColumnName("Docnum")
                        .HasColumnOrder(3)
                        .IsFixedLength();

                    b.Property<long>("DriverId")
                        .HasColumnType("bigint")
                        .HasColumnName("Driver")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Expiry")
                        .HasColumnOrder(5)
                        .IsFixedLength();

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(51);

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit")
                        .HasColumnName("Verified")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Issued")
                        .HasColumnOrder(4);

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(55)
                        .IsFixedLength();

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(54);

                    b.Property<string>("PersonalizedNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .HasColumnName("Passnum")
                        .HasColumnOrder(2)
                        .IsFixedLength();

                    b.Property<string>("VerifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnName("Verifier")
                        .HasColumnOrder(8)
                        .IsFixedLength();

                    b.Property<DateTime?>("VerifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7)
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.HasIndex("AttachmentTypeId");

                    b.HasIndex("DriverId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.AttarchmentType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(53);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(52);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(50);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(51);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(55);

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(54);

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("AttarchmentType");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.BusinessContact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(53)
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(52);

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("EmailAddress")
                        .HasColumnOrder(4);

                    b.Property<long?>("EmployerId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnName("EmployerId")
                        .HasColumnOrder(7);

                    b.Property<string>("FirstName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(51);

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(55)
                        .IsFixedLength();

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(54);

                    b.Property<string>("LastName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(3);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(2);

                    b.Property<string>("PrimaryContact")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("Phone1")
                        .HasColumnOrder(5)
                        .IsFixedLength();

                    b.Property<string>("SecondaryContact")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("Phone2")
                        .HasColumnOrder(6)
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.HasIndex("EmployerId")
                        .IsUnique();

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.BusinessEmployer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("PhysicalAddress")
                        .HasColumnOrder(2);

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(1);

                    b.Property<string>("BusinessNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("Phone2")
                        .HasColumnOrder(4)
                        .IsFixedLength();

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("City")
                        .HasColumnOrder(3);

                    b.Property<long?>("ContactId")
                        .HasColumnType("bigint")
                        .HasColumnName("ContactId")
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(53)
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(52);

                    b.Property<int>("EmployerType")
                        .HasColumnType("int")
                        .HasColumnName("Type")
                        .HasColumnOrder(5);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(51);

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(55)
                        .IsFixedLength();

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(54);

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Businesses");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.BusinessIndustry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(53)
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(52);

                    b.Property<string>("IndustryName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(51);

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(55)
                        .IsFixedLength();

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(54);

                    b.HasKey("Id");

                    b.ToTable("Industry", (string)null);
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.Driver", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(53)
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(52);

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("Dob")
                        .HasColumnOrder(4);

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint")
                        .HasColumnName("WorkAreaId")
                        .HasColumnOrder(6);

                    b.Property<long>("DriverTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("TypeId")
                        .HasColumnOrder(15);

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("EmailAddress")
                        .HasColumnOrder(7);

                    b.Property<string>("Facebook")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("Fbk")
                        .HasColumnOrder(11);

                    b.Property<string>("FirstName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(51);

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(55)
                        .IsFixedLength();

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(54);

                    b.Property<string>("LastName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(3);

                    b.Property<long?>("MemberId")
                        .HasColumnType("bigint")
                        .HasColumnName("MemberId")
                        .HasColumnOrder(15);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(2);

                    b.Property<string>("PrimaryContact")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("Phone1")
                        .HasColumnOrder(8)
                        .IsFixedLength();

                    b.Property<string>("ResidenceArea")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PhysicalAddress")
                        .HasColumnOrder(13);

                    b.Property<long?>("ResidenceDistrictId")
                        .HasColumnType("bigint")
                        .HasColumnName("HomeAreaId")
                        .HasColumnOrder(5);

                    b.Property<string>("SecondaryContact")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("Phone2")
                        .HasColumnOrder(9)
                        .IsFixedLength();

                    b.Property<string>("Tweeter")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("Twr")
                        .HasColumnOrder(14);

                    b.Property<string>("WhatsApp")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("Wap")
                        .HasColumnOrder(12);

                    b.Property<int?>("YearsOfExperience")
                        .HasColumnType("int")
                        .HasColumnName("Experience")
                        .HasColumnOrder(10);

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("DriverTypeId");

                    b.HasIndex("MemberId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.DriverType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(53)
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(52);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(51);

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(55)
                        .IsFixedLength();

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(54);

                    b.Property<string>("TypeName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("DriveType", (string)null);
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.IndividualEmployer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BusinessContactId")
                        .HasColumnType("bigint")
                        .HasColumnName("ContactId")
                        .HasColumnOrder(14);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(53)
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(52);

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint")
                        .HasColumnName("WorkAreaId")
                        .HasColumnOrder(10);

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("EmailAddress")
                        .HasColumnOrder(4);

                    b.Property<int>("EmployerType")
                        .HasColumnType("int")
                        .HasColumnName("Type")
                        .HasColumnOrder(7);

                    b.Property<string>("Facebook")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("Fbk")
                        .HasColumnOrder(11);

                    b.Property<string>("FirstName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(51);

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(55)
                        .IsFixedLength();

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(54);

                    b.Property<string>("LastName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(3);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(2);

                    b.Property<string>("PrimaryContact")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("Phone1")
                        .HasColumnOrder(5)
                        .IsFixedLength();

                    b.Property<string>("ResidenceArea")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PhysicalAddress")
                        .HasColumnOrder(8);

                    b.Property<long?>("ResidenceDistrictId")
                        .HasColumnType("bigint")
                        .HasColumnName("HomeAreaId")
                        .HasColumnOrder(9);

                    b.Property<string>("SecondaryContact")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("Phone2")
                        .HasColumnOrder(6)
                        .IsFixedLength();

                    b.Property<string>("Tweeter")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("Twr")
                        .HasColumnOrder(13);

                    b.Property<string>("WhatsApp")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("Wap")
                        .HasColumnOrder(12);

                    b.HasKey("Id");

                    b.HasIndex("BusinessContactId");

                    b.HasIndex("DistrictId");

                    b.ToTable("Individuals");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.Member", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PhysicalAddress")
                        .HasColumnOrder(7);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(53)
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(52);

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("EmailAddress")
                        .HasColumnOrder(4);

                    b.Property<string>("FirstName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(51);

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(55)
                        .IsFixedLength();

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(54);

                    b.Property<string>("LastName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(3);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(2);

                    b.Property<string>("PrimaryContact")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("Phone1")
                        .HasColumnOrder(5)
                        .IsFixedLength();

                    b.Property<string>("SecondaryContact")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("Phone2")
                        .HasColumnOrder(6)
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.Reference", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(53)
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(52);

                    b.Property<long?>("DriverId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(5);

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("EmailAddress")
                        .HasColumnOrder(3);

                    b.Property<string>("Employment")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nchar(200)")
                        .HasColumnOrder(4)
                        .IsFixedLength();

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(51);

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(55)
                        .IsFixedLength();

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(54);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Phone")
                        .HasColumnOrder(2);

                    b.Property<string>("RefereName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.ToTable("DriverReferees", (string)null);
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.District", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(53)
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(52);

                    b.Property<string>("DistrictName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(51);

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(55)
                        .IsFixedLength();

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(54);

                    b.HasKey("Id");

                    b.ToTable("District", (string)null);
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Settings.ConfigurationParameter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(53);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(52);

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Identifier")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(51);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(55);

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(54);

                    b.Property<string>("Parameter")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Paramname")
                        .HasColumnOrder(2);

                    b.Property<string>("ParameterValue")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Paramvalue")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Settings.Theme", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("SecondaryColor")
                        .HasColumnOrder(4);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(53)
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(52);

                    b.Property<string>("FontFamily")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(5);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(51);

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnOrder(55)
                        .IsFixedLength();

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(54);

                    b.Property<string>("Skin")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("PrimaryColor")
                        .HasColumnOrder(3);

                    b.Property<string>("ThemeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Themes");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Settings.UserTheme", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(53);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(52);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(50);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(51);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(55);

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(54);

                    b.Property<long>("ThemeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserThemes");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Access.RolePermission", b =>
                {
                    b.HasOne("Operators.Moddleware.Data.Entities.Access.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Operators.Moddleware.Data.Entities.Access.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Access.User", b =>
                {
                    b.HasOne("Operators.Moddleware.Data.Entities.Branch", "Branch")
                        .WithMany("Users")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Operators.Moddleware.Data.Entities.Access.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Operators.Moddleware.Data.Entities.Settings.UserTheme", "Theme")
                        .WithOne("User")
                        .HasForeignKey("Operators.Moddleware.Data.Entities.Access.User", "ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Role");

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Access.UserPassword", b =>
                {
                    b.HasOne("Operators.Moddleware.Data.Entities.Access.User", "User")
                        .WithMany("Passwords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Access.UserPermission", b =>
                {
                    b.HasOne("Operators.Moddleware.Data.Entities.Access.Permission", "Permission")
                        .WithMany("UserPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Operators.Moddleware.Data.Entities.Access.User", "User")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.Attachment", b =>
                {
                    b.HasOne("Operators.Moddleware.Data.Entities.Business.AttarchmentType", "Type")
                        .WithMany("Attachments")
                        .HasForeignKey("AttachmentTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Operators.Moddleware.Data.Entities.Business.Driver", "Driver")
                        .WithMany("Attachments")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.BusinessContact", b =>
                {
                    b.HasOne("Operators.Moddleware.Data.Entities.Business.BusinessEmployer", "Employer")
                        .WithOne("Contact")
                        .HasForeignKey("Operators.Moddleware.Data.Entities.Business.BusinessContact", "EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employer");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.BusinessEmployer", b =>
                {
                    b.HasOne("Operators.Moddleware.Data.Entities.Business.BusinessIndustry", "Industry")
                        .WithMany("Businesses")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.Driver", b =>
                {
                    b.HasOne("Operators.Moddleware.Data.Entities.District", "District")
                        .WithMany("Drivers")
                        .HasForeignKey("DistrictId");

                    b.HasOne("Operators.Moddleware.Data.Entities.Business.DriverType", "DriverType")
                        .WithMany("Drivers")
                        .HasForeignKey("DriverTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Operators.Moddleware.Data.Entities.Business.Member", "Member")
                        .WithMany("Drivers")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("District");

                    b.Navigation("DriverType");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.IndividualEmployer", b =>
                {
                    b.HasOne("Operators.Moddleware.Data.Entities.Business.BusinessIndustry", "Industry")
                        .WithMany("Individuals")
                        .HasForeignKey("BusinessContactId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Operators.Moddleware.Data.Entities.District", "District")
                        .WithMany("Individuals")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("District");

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.Reference", b =>
                {
                    b.HasOne("Operators.Moddleware.Data.Entities.Business.Driver", "Driver")
                        .WithMany("References")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Settings.ConfigurationParameter", b =>
                {
                    b.HasOne("Operators.Moddleware.Data.Entities.Branch", "Branch")
                        .WithMany("Parameters")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Settings.UserTheme", b =>
                {
                    b.HasOne("Operators.Moddleware.Data.Entities.Settings.Theme", "Theme")
                        .WithMany("UserThemes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Access.Permission", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Access.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Access.User", b =>
                {
                    b.Navigation("Passwords");

                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Branch", b =>
                {
                    b.Navigation("Parameters");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.AttarchmentType", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.BusinessEmployer", b =>
                {
                    b.Navigation("Contact");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.BusinessIndustry", b =>
                {
                    b.Navigation("Businesses");

                    b.Navigation("Individuals");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.Driver", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("References");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.DriverType", b =>
                {
                    b.Navigation("Drivers");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Business.Member", b =>
                {
                    b.Navigation("Drivers");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.District", b =>
                {
                    b.Navigation("Drivers");

                    b.Navigation("Individuals");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Settings.Theme", b =>
                {
                    b.Navigation("UserThemes");
                });

            modelBuilder.Entity("Operators.Moddleware.Data.Entities.Settings.UserTheme", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
